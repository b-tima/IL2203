|Datapath
RESET => Register_File:rf.RESET
RESET => ALU:the_best_alu_in_kista.RESET
CLK => Clock_Divider:cd.CLK100MHZ
OP[0] => ALU:the_best_alu_in_kista.OP[0]
OP[1] => ALU:the_best_alu_in_kista.OP[1]
OP[2] => ALU:the_best_alu_in_kista.OP[2]
IE => rf_input[3].OUTPUTSELECT
IE => rf_input[2].OUTPUTSELECT
IE => rf_input[1].OUTPUTSELECT
IE => rf_input[0].OUTPUTSELECT
IE => alu_en.IN0
INPUT[0] => rf_input[0].DATAB
INPUT[1] => rf_input[1].DATAB
INPUT[2] => rf_input[2].DATAB
INPUT[3] => rf_input[3].DATAB
WAddr[0] => Register_File:rf.WAddr[0]
WAddr[1] => Register_File:rf.WAddr[1]
Write => Register_File:rf.Write
RA[0] => internal_a_addr[0].DATAB
RA[1] => internal_a_addr[1].DATAB
ReadA => internal_read_a.DATAB
RB[0] => Register_File:rf.RB[0]
RB[1] => Register_File:rf.RB[1]
ReadB => Register_File:rf.ReadB
Bypass[0] => alu_a[3].OUTPUTSELECT
Bypass[0] => alu_a[2].OUTPUTSELECT
Bypass[0] => alu_a[1].OUTPUTSELECT
Bypass[0] => alu_a[0].OUTPUTSELECT
Bypass[1] => alu_b[3].OUTPUTSELECT
Bypass[1] => alu_b[2].OUTPUTSELECT
Bypass[1] => alu_b[1].OUTPUTSELECT
Bypass[1] => alu_b[0].OUTPUTSELECT
Bypass[1] => internal_read_a.OUTPUTSELECT
Bypass[1] => internal_a_addr[1].OUTPUTSELECT
Bypass[1] => internal_a_addr[0].OUTPUTSELECT
Offset[0] => alu_a[0].DATAB
Offset[0] => alu_b[0].DATAB
Offset[1] => alu_a[1].DATAB
Offset[1] => alu_b[1].DATAB
Offset[2] => alu_a[2].DATAB
Offset[2] => alu_b[2].DATAB
Offset[3] => alu_a[3].DATAB
Offset[3] => alu_b[3].DATAB
OE => alu_en.IN1
OE => OUTPUT[0].OE
OE => OUTPUT[1].OE
OE => OUTPUT[2].OE
OE => OUTPUT[3].OE
CLK1HZ_po <= Clock_Divider:cd.CLK1HZ
OUTPUT[0] <= OUTPUT[0].DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[1] <= OUTPUT[1].DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[2] <= OUTPUT[2].DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[3] <= OUTPUT[3].DB_MAX_OUTPUT_PORT_TYPE
Z_Flag <= ALU:the_best_alu_in_kista.Z_Flag
N_Flag <= ALU:the_best_alu_in_kista.N_Flag
O_Flag <= ALU:the_best_alu_in_kista.O_Flag


|Datapath|Register_File:rf
RESET => register_arr.OUTPUTSELECT
RESET => register_arr.OUTPUTSELECT
RESET => register_arr.OUTPUTSELECT
RESET => register_arr.OUTPUTSELECT
RESET => register_arr.OUTPUTSELECT
RESET => register_arr.OUTPUTSELECT
RESET => register_arr.OUTPUTSELECT
RESET => register_arr.OUTPUTSELECT
RESET => register_arr.OUTPUTSELECT
RESET => register_arr.OUTPUTSELECT
RESET => register_arr.OUTPUTSELECT
RESET => register_arr.OUTPUTSELECT
RESET => register_arr.OUTPUTSELECT
RESET => register_arr.OUTPUTSELECT
RESET => register_arr.OUTPUTSELECT
RESET => register_arr.OUTPUTSELECT
CLK => register_arr[0][0].CLK
CLK => register_arr[0][1].CLK
CLK => register_arr[0][2].CLK
CLK => register_arr[0][3].CLK
CLK => register_arr[1][0].CLK
CLK => register_arr[1][1].CLK
CLK => register_arr[1][2].CLK
CLK => register_arr[1][3].CLK
CLK => register_arr[2][0].CLK
CLK => register_arr[2][1].CLK
CLK => register_arr[2][2].CLK
CLK => register_arr[2][3].CLK
CLK => register_arr[3][0].CLK
CLK => register_arr[3][1].CLK
CLK => register_arr[3][2].CLK
CLK => register_arr[3][3].CLK
WD[0] => register_arr.DATAB
WD[0] => register_arr.DATAB
WD[0] => register_arr.DATAB
WD[0] => register_arr.DATAB
WD[1] => register_arr.DATAB
WD[1] => register_arr.DATAB
WD[1] => register_arr.DATAB
WD[1] => register_arr.DATAB
WD[2] => register_arr.DATAB
WD[2] => register_arr.DATAB
WD[2] => register_arr.DATAB
WD[2] => register_arr.DATAB
WD[3] => register_arr.DATAB
WD[3] => register_arr.DATAB
WD[3] => register_arr.DATAB
WD[3] => register_arr.DATAB
WAddr[0] => Decoder0.IN1
WAddr[1] => Decoder0.IN0
Write => register_arr.OUTPUTSELECT
Write => register_arr.OUTPUTSELECT
Write => register_arr.OUTPUTSELECT
Write => register_arr.OUTPUTSELECT
Write => register_arr.OUTPUTSELECT
Write => register_arr.OUTPUTSELECT
Write => register_arr.OUTPUTSELECT
Write => register_arr.OUTPUTSELECT
Write => register_arr.OUTPUTSELECT
Write => register_arr.OUTPUTSELECT
Write => register_arr.OUTPUTSELECT
Write => register_arr.OUTPUTSELECT
Write => register_arr.OUTPUTSELECT
Write => register_arr.OUTPUTSELECT
Write => register_arr.OUTPUTSELECT
Write => register_arr.OUTPUTSELECT
RA[0] => Mux0.IN1
RA[0] => Mux1.IN1
RA[0] => Mux2.IN1
RA[0] => Mux3.IN1
RA[1] => Mux0.IN0
RA[1] => Mux1.IN0
RA[1] => Mux2.IN0
RA[1] => Mux3.IN0
ReadA => QA.OUTPUTSELECT
ReadA => QA.OUTPUTSELECT
ReadA => QA.OUTPUTSELECT
ReadA => QA.OUTPUTSELECT
RB[0] => Mux4.IN1
RB[0] => Mux5.IN1
RB[0] => Mux6.IN1
RB[0] => Mux7.IN1
RB[1] => Mux4.IN0
RB[1] => Mux5.IN0
RB[1] => Mux6.IN0
RB[1] => Mux7.IN0
ReadB => QB.OUTPUTSELECT
ReadB => QB.OUTPUTSELECT
ReadB => QB.OUTPUTSELECT
ReadB => QB.OUTPUTSELECT
QA[0] <= QA.DB_MAX_OUTPUT_PORT_TYPE
QA[1] <= QA.DB_MAX_OUTPUT_PORT_TYPE
QA[2] <= QA.DB_MAX_OUTPUT_PORT_TYPE
QA[3] <= QA.DB_MAX_OUTPUT_PORT_TYPE
QB[0] <= QB.DB_MAX_OUTPUT_PORT_TYPE
QB[1] <= QB.DB_MAX_OUTPUT_PORT_TYPE
QB[2] <= QB.DB_MAX_OUTPUT_PORT_TYPE
QB[3] <= QB.DB_MAX_OUTPUT_PORT_TYPE


|Datapath|ALU:the_best_alu_in_kista
CLK => O_Flag~reg0.CLK
CLK => N_Flag~reg0.CLK
CLK => Z_Flag~reg0.CLK
CLK => SUM[0]~reg0.CLK
CLK => SUM[1]~reg0.CLK
CLK => SUM[2]~reg0.CLK
CLK => SUM[3]~reg0.CLK
RESET => SUM[0]~reg0.ACLR
RESET => SUM[1]~reg0.ACLR
RESET => SUM[2]~reg0.ACLR
RESET => SUM[3]~reg0.ACLR
RESET => O_Flag~reg0.ENA
RESET => Z_Flag~reg0.ENA
RESET => N_Flag~reg0.ENA
EN => Z_Flag.OUTPUTSELECT
EN => N_Flag.OUTPUTSELECT
EN => O_Flag.OUTPUTSELECT
EN => SUM[3]~reg0.ENA
EN => SUM[2]~reg0.ENA
EN => SUM[1]~reg0.ENA
EN => SUM[0]~reg0.ENA
OP[0] => Mux0.IN9
OP[0] => Mux1.IN9
OP[0] => Mux2.IN9
OP[0] => Mux3.IN9
OP[0] => Equal0.IN2
OP[1] => Mux0.IN8
OP[1] => Mux1.IN8
OP[1] => Mux2.IN8
OP[1] => Mux3.IN8
OP[1] => Equal0.IN1
OP[2] => Mux0.IN7
OP[2] => Mux1.IN7
OP[2] => Mux2.IN7
OP[2] => Mux3.IN7
OP[2] => Equal0.IN0
A[0] => sum_rtl.IN0
A[0] => sum_rtl.IN0
A[0] => sum_rtl.IN0
A[0] => Mux3.IN10
A[0] => Add0.IN4
A[0] => Add1.IN8
A[0] => Mux3.IN6
A[1] => sum_rtl.IN0
A[1] => sum_rtl.IN0
A[1] => sum_rtl.IN0
A[1] => Mux2.IN10
A[1] => Add0.IN3
A[1] => Add1.IN7
A[1] => Mux2.IN6
A[2] => sum_rtl.IN0
A[2] => sum_rtl.IN0
A[2] => sum_rtl.IN0
A[2] => Mux1.IN10
A[2] => Add0.IN2
A[2] => Add1.IN6
A[2] => Mux1.IN6
A[3] => sum_rtl.IN0
A[3] => sum_rtl.IN0
A[3] => sum_rtl.IN0
A[3] => Mux0.IN10
A[3] => process_0.IN0
A[3] => Add0.IN1
A[3] => Add1.IN5
A[3] => Mux0.IN6
A[3] => o_tmp.IN0
A[3] => process_0.IN0
B[0] => sum_rtl.IN1
B[0] => sum_rtl.IN1
B[0] => sum_rtl.IN1
B[0] => Add0.IN8
B[0] => Add1.IN4
B[1] => sum_rtl.IN1
B[1] => sum_rtl.IN1
B[1] => sum_rtl.IN1
B[1] => Add0.IN7
B[1] => Add1.IN3
B[2] => sum_rtl.IN1
B[2] => sum_rtl.IN1
B[2] => sum_rtl.IN1
B[2] => Add0.IN6
B[2] => Add1.IN2
B[3] => sum_rtl.IN1
B[3] => sum_rtl.IN1
B[3] => sum_rtl.IN1
B[3] => process_0.IN1
B[3] => Add0.IN5
B[3] => Add1.IN1
B[3] => o_tmp.IN1
B[3] => process_0.IN1
SUM[0] <= SUM[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SUM[1] <= SUM[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SUM[2] <= SUM[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SUM[3] <= SUM[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Z_Flag <= Z_Flag~reg0.DB_MAX_OUTPUT_PORT_TYPE
N_Flag <= N_Flag~reg0.DB_MAX_OUTPUT_PORT_TYPE
O_Flag <= O_Flag~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Datapath|Clock_Divider:cd
CLK100MHZ => counter[0].CLK
CLK100MHZ => counter[1].CLK
CLK100MHZ => counter[2].CLK
CLK100MHZ => counter[3].CLK
CLK100MHZ => counter[4].CLK
CLK100MHZ => counter[5].CLK
CLK100MHZ => counter[6].CLK
CLK100MHZ => counter[7].CLK
CLK100MHZ => counter[8].CLK
CLK100MHZ => counter[9].CLK
CLK100MHZ => counter[10].CLK
CLK100MHZ => counter[11].CLK
CLK100MHZ => counter[12].CLK
CLK100MHZ => counter[13].CLK
CLK100MHZ => counter[14].CLK
CLK100MHZ => counter[15].CLK
CLK100MHZ => counter[16].CLK
CLK100MHZ => counter[17].CLK
CLK100MHZ => counter[18].CLK
CLK100MHZ => counter[19].CLK
CLK100MHZ => counter[20].CLK
CLK100MHZ => counter[21].CLK
CLK100MHZ => counter[22].CLK
CLK100MHZ => counter[23].CLK
CLK100MHZ => counter[24].CLK
CLK100MHZ => clk_tmp.CLK
CLK1HZ <= clk_tmp.DB_MAX_OUTPUT_PORT_TYPE


